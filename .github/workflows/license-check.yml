name: "License Check and CLA Trigger"

on:
  workflow_call: # This is essential for reusable workflows

jobs:
  check-and-trigger:
    runs-on: ubuntu-latest
    outputs:
      run_cla_workflow: ${{ steps.check_license.outputs.run_cla }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout Org .github Repo #access the organization level .github repo
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/.github
          path: .github-org

      - name: Read Permissive Licenses from JSON
        id: read_licenses
        run: |
          echo "::set-output name=licenses::$(jq -r '.permissive | @json' .github-org/permissive_licenses.json)"

      - name: Check license
        id: check_license
        env:
          PERMISSIVE_LICENSES: ${{ steps.read_licenses.outputs.licenses }}
        run: |
          # Potential license file names
          license_filenames=("LICENSE" "LICENSE.txt" "LICENSE.md" "COPYING" "COPYING.txt" "COPYING.md")

          run_cla="true" # Default to running CLA

          # Loop through potential license file names
          for license_file in "${license_filenames[@]}"; do
            if [[ -f "$license_file" ]]; then
              echo "Found potential license file: $license_file"

              # Read the first 20 lines of the file (adjust as needed)
              head -n 20 "$license_file" > /tmp/license_head
              # Convert JSON string to an array
              IFS=',' read -r -a permissive_licenses <<< "$PERMISSIVE_LICENSES"
              # Check if any of the permissive licenses appear in those lines (case-insensitive)
              for lic in "${permissive_licenses[@]}"; do
                # Remove quotes and leading/trailing spaces from the license name
                lic=$(echo "$lic" | tr -d '"' | xargs)
                if grep -i -q "$lic" /tmp/license_head; then
                  echo "Found permissive license: $lic in $license_file"
                  run_cla="false"
                  break 2 # Exit both loops if a permissive license is found
                fi
              done

              if [[ "$run_cla" == "false" ]]; then
                break # Exit outer loop if a permissive license was detected
              fi
            fi
          done

          echo "::set-output name=run_cla::$run_cla"
          if [[ "$run_cla" == "true" ]]; then
            echo "Non-permissive or no license found. CLA will be triggered."
          else
            echo "Permissive license found. CLA will be skipped."

      - name: Call CLA Workflow
        if: ${{ steps.check_license.outputs.run_cla == 'true' }}
        uses: ./.github/workflows/cla-assistant-lite.yml
