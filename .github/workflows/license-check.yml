name: "License Check"

on:
  workflow_call:

jobs:
  check-and-trigger:
    runs-on: ubuntu-latest
    outputs:
      run_cla_workflow: ${{ steps.check_license.outputs.run_cla }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout Org .github Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/.github
          path: .github-org

      - name: Read Permissive Licenses from JSON
        id: read_licenses
        run: |
          echo "licenses=$(jq -r '.permissive | join(",")' .github-org/permissive_licenses.json)" >> $GITHUB_ENV

      - name: Check license
        id: check_license
        env:
          PERMISSIVE_LICENSES: ${{ env.licenses }}
        run: |
          # Potential license file names
          license_filenames=("LICENSE" "LICENSE.txt" "LICENSE.md" "COPYING" "COPYING.txt" "COPYING.md")

          run_cla="true" # Default to running CLA

          # Loop through potential license file names
          for license_file in "${license_filenames[@]}"; do
            if [[ -f "$license_file" ]]; then
              echo "Found potential license file: $license_file"

              # Read the first 20 lines of the file (adjust as needed)
              head -n 20 "$license_file" > /tmp/license_head

              # Iterate over the permissive licenses
              IFS=',' read -r -a licenses_array <<< "$PERMISSIVE_LICENSES"
              for lic in "${licenses_array[@]}"; do
                if grep -F -i -q "$lic" /tmp/license_head; then
                  echo "Found permissive license: $lic in $license_file"
                  run_cla="false"
                  break 2 # Exit both loops if a permissive license is found
                fi
              done
            fi
          done

          echo "run_cla=$run_cla" >> $GITHUB_ENV

          if [[ "$run_cla" == "true" ]]; then
            echo "Non-permissive or no license found. CLA will be triggered."
          else
            echo "Permissive license found. CLA will be skipped."

      - name: Call CLA Workflow
        if: steps.check_license.outputs.run_cla == 'true'
        uses: contributor-assistant/github-action@v2.6.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path-to-signatures: 'signatures/version1/cla.json'
          path-to-document: 'https://github.com/cla-assistant/github-action/blob/master/SAPCLA.md'
          # branch should not be protected
          branch: 'main'
          allowlist: user1,bot*
